library(stringr)
Screening_Demographics <- read.csv("Screening___Demographics.csv")
head(Screening_Demographics)
Screening_Demographics_PDControl <- subset(Screening_Demographics, Screening_Demographics$CURRENT_APPRDX == 1 | Screening_Demographics$CURRENT_APPRDX == 2)
dim(Screening_Demographics_PDControl)


Blood_Chemistry_Hematology <- read.csv("Blood_Chemistry___Hematology.csv")
head(Blood_Chemistry_Hematology)

bloodtest <- read.table("bloodtest.txt", header=T, sep="\t")
bloodtest
for(k in 1:nrow(bloodtest))
{
	type <- as.character(bloodtest[k, ]$type)
	code <- as.character(bloodtest[k, ]$code)



Blood_Chemistry_Hematology_k <- subset(Blood_Chemistry_Hematology, Blood_Chemistry_Hematology$LTSTCODE == code & Blood_Chemistry_Hematology$LUSRES != "")
dim(Blood_Chemistry_Hematology_k)
head(Blood_Chemistry_Hematology_k)
dim(unique(data.frame(Blood_Chemistry_Hematology_k$PATNO)))


patList <- unique(data.frame(Blood_Chemistry_Hematology_k$PATNO))

dat_k <- data.frame(1000, "Female", 50, "Control", 1, "id", "EVENT_ID")
colnames(dat_k) <- c( "patID", "GENDER", "age_at_test", "Dignosis", paste(type, "res", sep="_"), "testID", "EVENT_ID")
for(i in 1:nrow(patList))
{
	patID <- patList[i, 1]
	Blood_Chemistry_Hematology_k_sub <- subset(Blood_Chemistry_Hematology_k, Blood_Chemistry_Hematology_k$PATNO == patID)
	Screening_Demographics_PDControl_sub <- subset(Screening_Demographics_PDControl, Screening_Demographics_PDControl$PATNO == patID)
	
	if(nrow(Blood_Chemistry_Hematology_k_sub) > 0 & nrow(Screening_Demographics_PDControl_sub) > 0)
	{
		 
		age_at_test <- as.numeric(str_split_fixed(Blood_Chemistry_Hematology_k_sub$LCOLLDT, "\\/", 2)[, 2]) - as.numeric(Screening_Demographics_PDControl_sub[1,]$BIRTHDT)
		
		tmp_split <- data.frame(str_split_fixed(Blood_Chemistry_Hematology_k_sub$LUSRES, "\\<", 2))
				
		tmp_split$X1 <- as.numeric(as.character(tmp_split$X1))
		tmp_split$X2 <- as.numeric(as.character(tmp_split$X2))
		tmp_split[is.na(tmp_split)] <- 0
		k_res <-  tmp_split[, 1] + tmp_split[, 2]

				
		if(Screening_Demographics_PDControl_sub[1,]$GENDER == 0 | Screening_Demographics_PDControl_sub[1,]$GENDER == 1)
		{
			GENDER <- c("Female")
		}
		if(Screening_Demographics_PDControl_sub[1,]$GENDER == 2)
		{
			GENDER <- c("Male")
		}
		
		if(Screening_Demographics_PDControl_sub[1,]$CURRENT_APPRDX == 1)
		{
			Dignosis <- c("PD")
		}
		if(Screening_Demographics_PDControl_sub[1,]$CURRENT_APPRDX == 2)
		{
			Dignosis <- c("Control")
		}
		
		testID <- Blood_Chemistry_Hematology_k_sub$LCOLLDT
		EVENT_ID <- Blood_Chemistry_Hematology_k_sub$EVENT_ID
		
		dat_temp <- data.frame(patID, GENDER, age_at_test, Dignosis, k_res, testID, EVENT_ID)
		colnames(dat_temp) <- c("patID", "GENDER", "age_at_test", "Dignosis", paste(type, "res", sep="_"), "testID", "EVENT_ID")
		
		dat_k <- rbind(dat_k, dat_temp)
	}
	
}

dat_k <- dat_k[2:nrow(dat_k), ]
dat_k <- na.omit(data.frame(dat_k))
dat_k <- unique(dat_k)

head(dat_k)
dim(dat_k)
dim(subset(dat_k, dat_k$Dignosis == "PD"))

dim(subset(dat_k, dat_k$Dignosis == "Control"))

outfile <- paste("dat_", type, ".txt", sep="")

write.table(dat_k, outfile, quote=F, sep="\t", row.names=F)


}






library("data.table")
library("stringr")

dat_Hematocrit <- fread("dat_Hematocrit.txt", header=T, sep="\t")
head(dat_Hematocrit)
dat_Hematocrit <- unique(dat_Hematocrit)

dat_RBC <- fread("dat_RBC.txt", header=T, sep="\t")
head(dat_RBC)
dat_RBC <- unique(dat_RBC)

dat_Hemoglobin <- fread("dat_Hemoglobin.txt", header=T, sep="\t")
head(dat_Hemoglobin)
dat_Hemoglobin <- unique(dat_Hemoglobin)

keycols <- c("patID", "GENDER", "age_at_test", "Dignosis", "testID", "EVENT_ID")
setkeyv(dat_Hematocrit, keycols)
setkeyv(dat_RBC, keycols)
setkeyv(dat_Hemoglobin, keycols)

Result2 <- merge(dat_Hematocrit, dat_RBC, all=TRUE)
Result2 <- merge(Result2, dat_Hemoglobin, all=TRUE)
Result2 <- data.frame(Result2)
Result2 <- na.omit(Result2)
dim(Result2)
write.table(Result2, "Result2.txt", quote=F, row.names=F, sep="\t")

library("data.table")
library("limma")
Result2 <- fread("Result2.txt", header=T, sep="\t")
keycols <- c("patID", "GENDER", "age_at_test", "Dignosis", "testID", "EVENT_ID")
setkeyv(Result2, keycols)

bloodtest <- read.table("bloodtest.txt", header=T, sep="\t")
bloodtest
toptable <- matrix(data=NA, ncol=5, nrow=5)

for(k in 1:5)
{
	type <- as.character(bloodtest[k, ]$type)
	inFile <- paste("dat_", type, ".txt", sep="")
	
	dat_k <- fread(inFile, header=T, sep="\t")
	head(dat_k)
	
	dat_k <- unique(dat_k)
	setkeyv(dat_k, keycols)
	
	Result <- merge(dat_k, Result2, all=TRUE)
	Result <- na.omit(Result)
	
	
	Result <- data.frame(Result)
	
	
	
	
	
	PatientIDList <- unique(Result$patID)
		
	Result_new <- data.frame(Result[1, 1:2], Result[1, 4], Result[1, 3], Result[1, 7:10] )
	colnames(Result_new) <- c("patID", "GENDER", "Dignosis", "age_at_test", "res", "Hematocrit_res", "RBC_res", "Hemoglobin_res")
	for(i in 1:length(PatientIDList))
	{
	
		sub <- subset(Result, Result$patID == as.character(PatientIDList[i]))
	
		age_at_test <- mean(sub$age_at_test)
		res <- mean(sub[, 7])
		Hematocrit_res <- mean(sub$Hematocrit_res)
		RBC_res <- mean(sub$RBC_res)
		Hemoglobin_res <- mean(sub$Hemoglobin_res)
	
		tmp <- data.frame(sub[1, 1:2], sub[1, 4], age_at_test, res, Hematocrit_res, RBC_res, Hemoglobin_res)
		colnames(tmp) <- c("patID", "GENDER", "Dignosis", "age_at_test", "res", "Hematocrit_res", "RBC_res", "Hemoglobin_res")
		Result_new <- rbind(Result_new, tmp)
	}
	Result_new <- Result_new[2:nrow(Result_new), ]
	
	
Result_new$Dignosis <- factor(Result_new$Dignosis, levels=c("Control", "PD"))

	
	data <- t(Result_new[, 5])
	design <- model.matrix(~ Dignosis + age_at_test + GENDER + Hematocrit_res + RBC_res + Hemoglobin_res, data= Result_new)
	fit <- lmFit(data, design, method="robust")
	fit <- eBayes(fit)
	k_toptable <- toptable(fit,coef=2,adjust.method="BH",sort="none",n=Inf)
	
	toptable[k, ] <- as.matrix(k_toptable)
}
toptable <- data.frame(toptable)
colnames(toptable) <- c("logFC", "t", "P.Value", "adj.P.Val", "B")
toptable <- toptable[, c("logFC", "t", "P.Value", "B")]
toptable$fdr <- p.adjust(toptable$P.Value, method="fdr")
toptable$type <- bloodtest[1:5, 1]
write.table(toptable, "toptable_average.txt", quote=F, sep="\t", row.names=F)




